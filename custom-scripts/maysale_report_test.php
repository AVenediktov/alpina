<?
require($_SERVER["DOCUMENT_ROOT"]."/bitrix/modules/main/include/prolog_before.php");

@set_time_limit(0);
ignore_user_abort(true);

CModule::IncludeModule("sale");
CModule::IncludeModule("iblock");
global $USER;
if ($USER->IsAdmin()){
$print_table = "<table width='100%'><tbody><tr>";
$print_table .= "
<td>Номер заказа</td>
<td>Цена без скидки</td>
<td>Цена со скидкой</td>
<td>Цена с доставкой</td>
<td>Стоимость доставки</td>
<td>Количество книг</td>
<td>Размер скидки (%)</td>
<td>Размер скидки (руб)</td>
</tr>
";

$books_table = "<table width='100%'><tbody><tr>";
$books_table .= "
<td>Заказ</td>
<td>Названия</td>
</tr>
";

$orders = array(
67089,
67088,
67087,
67085,
67083,
67082,
67081,
67080,
67078,
67077,
67076,
67075,
67073,
67072,
67071,
67070,
67069,
67068,
67067,
67066,
67065,
67063,
67060,
67059,
67058,
67057,
67056,
67055,
67053,
67052,
67051,
67050,
67047,
67046,
67043,
67042,
67039,
67037,
67035,/*
67034,
67033,
67029,
67028,
67027,
67025,
67024,
67023,
67022,
67012,
67011,
67009,
67006,
67003,
67002,
67001,
67000,
66999,
66997,
66996,
66995,
66994,
66993,
66992,
66991,
66990,
66988,
66987,
66985,
66984,
66983,
66982,
66981,
66979,
66977,
66975,
66973,
66971,
66968,
66966,
66963,
66962,
66961,
66960,
66957,
66956,
66953,
66952,
66950,
66949,
66948,
66945,
66944,
66941,
66940,
66938,
66936,
66934,
66932,
66931,
66930,
66929,
66927,
66926,
66922,
66921,
66920,
66917,
66915,
66914,
66913,
66912,
66911,
66909,
66908,
66904,
66902,
66901,
66900,
66899,
66898,
66891,
66890,
66889,
66888,
66887,
66884,
66882,
66880,
66875,
66872,
66870,
66869,
66866,
66865,
66864,
66862,
66861,
66860,
66858,
66854,
66853,
66852,
66849,
66848,
66847,
66846,
66845,
66844,
66842,
66841,
66839,
66838,
66835,
66834,
66833,
66830,
66829,
66828,
66822,
66821,
66820,
66818,
66816,
66814,
66813,
66811,
66808,
66807,
66803,
66800,
66799,
66796,
66793,
66792,
66791,
66788,
66787,
66783,
66782,
66781,
66780,
66778,
66775,
66774,
66773,
66772,
66771,
66769,
66768,
66767,
66766,
66763,
66762,
66759,
66758,
66756,
66755,
66754,
66753,
66752,
66751,
66750,
66749,
66747,
66746,
66745,
66743,
66742,
66740,
66739,
66738,
66737,
66736,
66735,
66734,
66733,
66732,
66731,
66730,
66729,
66728,
66727,
66726,
66725,
66724,
66723,
66722,
66721,
66720,
66719,
66718,
66717,
66714,
66713,
66711,
66710,
66709,
66708,
66707,
66706,
66705,
66704,
66703,
66702,
66701,
66700,
66699,
66698,
66697,
66696,
66695,
66694,
66693,
66692,
66690,
66689,
66686,
66684,
66679,
66677,
66675,
66674,
66664,
66662,
66658,
66656,
66654,
66653,
66652,
66651,
66649,
66647,
66644,
66642,
66641,
66640,
66639,
66638,
66637,
66636,
66635,
66634,
66630,
66629,
66628,
66626,
66624,
66622,
66620,
66619,
66616,
66615,
66614,
66613,
66611,
66610,
66608,
66607,
66606,
66605,
66603,
66602,
66601,
66597,
66596,
66594,
66593,
66589,
66588,
66586,
66585,
66584,
66583,
66582,
66579,
66576,
66575,
66574,
66573,
66572,
66571,
66568,
66567,
66566,
66564,
66563,
66561,
66560,
66559,
66558,
66556,
66549,
66548,
66547,
66546,
66544,
66543,
66541,
66539,
66538,
66537,
66536,
66533,
66531,
66530,
66529,
66528,
66527,
66525,
66524,
66523,
66522,
66521,
66517,
66516,
66515,
66514,
66513,
66512,
66510,
66509,
66508,
66507,
66505,
66504,
66503,
66502,
66501,
66500,
66499,
66498,
66497,
66495,
66494,
66493,
66490,
66488,
66486,
66485,
66483,
66482,
66481,
66480,
66479,
66477,
66475,
66474,
66473,
66472,
66471,
66470,
66469,
66468,
66467,
66464,
66460,
66459,
66457,
66456,
66455,
66453,
66450,
66449,
66448,
66446,
66444,
66443,
66440,
66439,
66438,
66437,
66435,
66434,
66432,
66430,
66429,
66428,
66427,
66426,
66423,
66419,
66418,
66417,
66415,
66414,
66413,
66411,
66410,
66409,
66406,
66405,
66404,
66403,
66400,
66398,
66397,
66395,
66391,
66390,
66389,
66388,
66387,
66384,
66383,
66382,
66380,
66378,
66377,
66376,
66375,
66374,
66373,
66372,
66371,
66369,
66367,
66365,
66364,
66363,
66362,
66360,
66359,
66357,
66355,
66354,
66353,
66352,
66349,
66348,
66347,
66345,
66342,
66341,
66339,
66338,
66337,
66336,
66334,
66331,
66330,
66329,
66326,
66325,
66323,
66317,
66316,
66315,
66314,
66313,
66312,
66311,
66310,
66309,
66308,
66307,
66306,
66305,
66304,
66303,
66302,
66301,
66300,
66299,
66297,
66295,
66294,
66293,
66292,
66291,
66290,
66288,
66287,
66286,
66285,
66284,
66283,
66280,
66279,
66278,
66277,
66274,
66273,
66272,
66271,
66270,
66269,
66267,
66264,
66263,
66260,
66259,
66258,
66255,
66254,
66253,
66252,
66251,
66250,
66249,
66248,
66247,
66246,
66244,
66243,
66242,
66241,
66240,
66239,
66238,
66237,
66236,
66235,
66234,
66233,
66232,
66231,
66227,
66225,
66224,
66222,
66221,
66220,
66219,
66218,
66216,
66214,
66213,
66212,
66211,
66210,
66209,
66208,
66206,
66205,
66202,
66201,
66200,
66198,
66197,
66196,
66195,
66194,
66193,
66192,
66191,
66190,
66187,
66186,
66185,
66184,
66183,
66182,
66181,
66180,
66179,
66178,
66177,
66176,
66175,
66174,
66173,
66172,
66171,
66170,
66169,
66168,
66166,
66165,
66164,
66163,
66162,
66161,
66160,
66159,
66158,
66157,
66156,
66155,
66154,
66153,
66152,
66151,
66150,
66149,
66148,
66147,
66146,
66145,
66144,
66143,
66142,
66141,
66140,
66139,
66138,
66137,
66136,
66135,
66134,
66133,
66132,
66131,
66130,
66129,
66128,
66127,
66126,
66125,
66124,
66123,
66122,
66121,
66120,
66119,
66117,
66116,
66115,
66112,
66111,
66110,
66109,
66108,
66107,
66106,
66105,
66104,
66103,
66102,
66101,
66100,
66099,
66098,
66097,
66096,
66095,
66094,
66092,
66091,
66090,
66089,
66088,
66087,
66086,
66085,
66084,
66082,
66081,
66080,
66079,
66078,
66077,
66076,
66075,
66074,
66072,
66071,
66070,
66069,
66068,
66067,
66066,
66065,
66063,
66061,
66060,
66059,
66058,
66057,
66053,
66052,
66050,
66049,
66047,
66043*/
);

$final_old_price = 0;
$final_new_price = 0;
$final_wdelivery_price = 0;
$final_delivery_price = 0;
$final_quantity = 0;
$final_dicount_sum = 0;

foreach ($orders as $orderno) {
	$order = CSaleOrder::GetByID($orderno);

	if ($order[STATUS_ID] != 'D' || $order[STATUS_ID] != 'F' || $order[STATUS_ID] != 'I' || $order[STATUS_ID] != 'K')
		continue;
	print_r($order[STATUS_ID]);
		
	$db_basket = CSaleBasket::GetList(($b="NAME"), ($o="ASC"), array("ORDER_ID"=>$orderno));


	$old_price = 0;
	$new_price = 0;
	$wdelivery_price = 0;
	$delivery_price = 0;
	$quantity = 0;
	
	
	$books_table .= "<tr><td>".$orderno."</td><td>";
	
	while ($ar_basket = $db_basket->Fetch())
	{

		
		
		$book_price = CCatalogProduct::GetByIDEx($ar_basket[PRODUCT_ID]);
		$book_price = $book_price["PRICES"][11]['PRICE'];

		
		$quantity += $ar_basket["QUANTITY"];
		$new_price += DoubleVal($ar_basket["PRICE"])*IntVal($ar_basket["QUANTITY"]);
		
		$old_price += $book_price*IntVal($ar_basket["QUANTITY"]);
		if ($ar_basket["PRICE"] < "100") {
			$books_table .= $orderno."*".$ar_basket[NAME]."*".$ar_basket[QUANTITY]."*".$ar_basket[PRICE]."*".$ar_basket[PRODUCT_ID]."*".$ar_basket[DISCOUNT_VALUE]."*".$book_price."<br />";
		}
	}

	$delivery_price = $order[PRICE] - $new_price;
	if ($delivery_price < 1) {
		$delivery_price = 0;
	}

	$print_table .= "<tr>";
	$print_table .= "<td>".$orderno."</td>"; //Номер заказа
	$print_table .= "<td>".$old_price."</td>"; //Цена без скидки
	$print_table .= "<td>".$new_price."</td>"; //Цена со скидкой
	$print_table .= "<td>".$order[PRICE]."</td>"; //Цена с доставкой
	$print_table .= "<td>".$delivery_price."</td>"; //Стоимость доставки
	$print_table .= "<td>".($quantity)."</td>"; //Количество книг
	$print_table .= "<td>".substr(((-$new_price/$old_price + 1)*100),0,2)."%</td>"; //Размер скидки %
	$print_table .= "<td>".($old_price - $new_price)."</td>"; //Размер скидки руб.
	
	$books_table .= "</td></tr>";
	
	$final_old_price += $old_price;
	$final_new_price += $new_price;
	$final_wdelivery_price += $order[PRICE];
	$final_delivery_price += $delivery_price;
	$final_quantity += $quantity;
	$final_dicount_sum += ($old_price - $new_price);

	$print_table .= "</tr>";
}

$print_table .= "<tr>
<td>ИТОГО</td>
<td>".$final_old_price."</td>
<td>".$final_new_price."</td>
<td>".$final_wdelivery_price."</td>
<td>".$final_delivery_price."</td>
<td>".$final_quantity."</td>
<td>".substr((-$final_new_price/$final_old_price + 1),2,2)."%</td>
<td>".$final_dicount_sum."</td>
</tr>
";
$print_table .= "</tbody></table>";
$books_table .= "</tbody></table>";
echo $print_table;
echo $books_table;
}
require($_SERVER["DOCUMENT_ROOT"]."/bitrix/modules/main/include/epilog_after.php");?>